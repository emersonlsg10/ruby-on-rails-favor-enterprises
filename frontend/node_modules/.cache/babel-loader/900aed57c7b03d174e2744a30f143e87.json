{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/emerson/spotfy-playlist/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Filters from './components/filters';\nimport Playlist from './components/playlist';\nimport { makeStyles } from '@material-ui/core/styles';\nimport callSpotfy from './hooks/spotfyPlaylist';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    marginTop: 20\n  },\n  title: {\n    marginBottom: 20,\n    fontSize: 40,\n    fontWeight: 'bold',\n    fontStyle: 'italic',\n    textAlign: 'center'\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const [listMusic, setListMusic] = React.useState(null);\n  const [filters, setFilters] = React.useState({\n    locale: 'en_AU',\n    country: 'AU',\n    limit: '50',\n    offset: '1'\n  });\n\n  const getPlayList = async (params = '') => {\n    const responsePlaylist = await callSpotfy(params);\n    if (responsePlaylist && responsePlaylist.playlists) setListMusic(responsePlaylist.playlists);\n  };\n\n  const concatParams = () => {\n    let params = '';\n    const keys = Object.keys(filters);\n    const values = Object.values(filters);\n\n    for (let i = 0; i < keys.length; i++) {\n      params += `${keys[i]}=${values[i]}&`;\n    }\n\n    return params;\n  };\n\n  useEffect(() => {\n    getPlayList(concatParams());\n  }, [filters]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.title,\n        children: \"Bem vindo \\xE0 Playlist de lan\\xE7amentos!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filters, {\n        setFilters: setFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n        listMusic: listMusic || []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Qbnx05/93AE4nxthIvKkPF2R+GA=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/emerson/spotfy-playlist/src/App.js"],"names":["React","useEffect","Filters","Playlist","makeStyles","callSpotfy","useStyles","theme","container","display","justifyContent","alignItems","flexWrap","marginTop","title","marginBottom","fontSize","fontWeight","fontStyle","textAlign","App","classes","listMusic","setListMusic","useState","filters","setFilters","locale","country","limit","offset","getPlayList","params","responsePlaylist","playlists","concatParams","keys","Object","values","i","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,QAAQ,EAAE,MAJD;AAKTC,IAAAA,SAAS,EAAE;AALF,GAD4B;AAQvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,YAAY,EAAE,EADT;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,UAAU,EAAE,MAHP;AAILC,IAAAA,SAAS,EAAE,QAJN;AAKLC,IAAAA,SAAS,EAAE;AALN;AARgC,CAAZ,CAAD,CAA5B;;AAiBA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BvB,KAAK,CAACwB,QAAN,CAAe,IAAf,CAAlC;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB1B,KAAK,CAACwB,QAAN,CAAe;AAC3CG,IAAAA,MAAM,EAAE,OADmC;AAE3CC,IAAAA,OAAO,EAAE,IAFkC;AAG3CC,IAAAA,KAAK,EAAE,IAHoC;AAI3CC,IAAAA,MAAM,EAAE;AAJmC,GAAf,CAA9B;;AAOA,QAAMC,WAAW,GAAG,OAAOC,MAAM,GAAG,EAAhB,KAAuB;AACzC,UAAMC,gBAAgB,GAAG,MAAM5B,UAAU,CAAC2B,MAAD,CAAzC;AACA,QAAIC,gBAAgB,IAAIA,gBAAgB,CAACC,SAAzC,EACEX,YAAY,CAACU,gBAAgB,CAACC,SAAlB,CAAZ;AACH,GAJD;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIH,MAAM,GAAG,EAAb;AACA,UAAMI,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYX,OAAZ,CAAb;AACA,UAAMa,MAAM,GAAGD,MAAM,CAACC,MAAP,CAAcb,OAAd,CAAf;;AAEA,SAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpCP,MAAAA,MAAM,IAAK,GAAEI,IAAI,CAACG,CAAD,CAAI,IAAGD,MAAM,CAACC,CAAD,CAAI,GAAlC;AACD;;AACD,WAAOP,MAAP;AACD,GATD;;AAWA/B,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,WAAW,CAACI,YAAY,EAAb,CAAX;AACD,GAFQ,EAEN,CAACV,OAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACb,SAAxB;AAAA,2BACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEa,OAAO,CAACP,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAS,QAAA,UAAU,EAAEY;AAArB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEJ,SAAS,IAAI;AAAlC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAzCQF,G;UACSd,S;;;KADTc,G;AA2CT,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport Filters from './components/filters';\nimport Playlist from './components/playlist';\nimport { makeStyles } from '@material-ui/core/styles';\nimport callSpotfy from './hooks/spotfyPlaylist';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    marginTop: 20,\n  },\n  title: {\n    marginBottom: 20,\n    fontSize: 40,\n    fontWeight: 'bold',\n    fontStyle: 'italic',\n    textAlign: 'center',\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [listMusic, setListMusic] = React.useState(null);\n\n  const [filters, setFilters] = React.useState({\n    locale: 'en_AU',\n    country: 'AU',\n    limit: '50',\n    offset: '1',\n  });\n\n  const getPlayList = async (params = '') => {\n    const responsePlaylist = await callSpotfy(params);\n    if (responsePlaylist && responsePlaylist.playlists)\n      setListMusic(responsePlaylist.playlists);\n  };\n\n  const concatParams = () => {\n    let params = '';\n    const keys = Object.keys(filters);\n    const values = Object.values(filters);\n\n    for (let i = 0; i < keys.length; i++) {\n      params += `${keys[i]}=${values[i]}&`;\n    }\n    return params;\n  };\n\n  useEffect(() => {\n    getPlayList(concatParams());\n  }, [filters]);\n\n  return (\n    <div className={classes.container}>\n      <div>\n        <div className={classes.title}>Bem vindo à Playlist de lançamentos!</div>\n        <Filters setFilters={setFilters} />\n        <Playlist listMusic={listMusic || []} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}