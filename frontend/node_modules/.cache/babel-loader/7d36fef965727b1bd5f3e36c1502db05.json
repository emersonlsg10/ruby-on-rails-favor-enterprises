{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/emerson/spotfy-playlist/src/components/filters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport moment from 'moment';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n}));\n\nconst getFilters = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const html = await axios.get(`http://www.mocky.io/v2/5a25fade2e0000213aa90776`);\n      resolve(html.data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nfunction Filters({\n  setFilters\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [listFilters, setListFilters] = React.useState(null);\n  useEffect(() => {\n    const getInitialData = async () => {\n      const responseFilters = await getFilters();\n      setListFilters(responseFilters.filters);\n    };\n\n    getInitialData();\n  }, []);\n\n  const handleChange = (event, itemId) => {\n    console.log(event.target.value.value, itemId); // setFilters(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: listFilters && listFilters.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [item.values && /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-label\",\n          id: item.id // value={age}\n          ,\n          name: item.name,\n          onChange: e => handleChange(e, item.id),\n          children: item.values.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item.value,\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this), item.validation && item.validation.primitiveType === 'STRING' && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: item.id,\n          name: item.name,\n          onChange: e => handleChange(e, item.id),\n          label: item.name,\n          type: \"datetime-local\",\n          defaultValue: moment(new Date()).format('yyyy-mm-dd HH:mm:ss'),\n          className: classes.textField,\n          InputLabelProps: {\n            shrink: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }, this), item.validation && item.validation.primitiveType === 'INTEGER' && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: item.id,\n          type: \"number\",\n          name: item.name,\n          label: item.name,\n          onChange: e => handleChange(e, item.id),\n          inputProps: {\n            min: item.validation.min || 1,\n            max: item.validation.max || 50\n          },\n          InputLabelProps: {\n            shrink: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Filters, \"Ylk0nUmQUixF8VE2hqje/la7xN0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Filters;\nexport default Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["/home/emerson/spotfy-playlist/src/components/filters.js"],"names":["React","useEffect","makeStyles","InputLabel","MenuItem","FormControl","Select","TextField","axios","moment","useStyles","theme","root","margin","spacing","width","container","display","justifyContent","alignItems","flexWrap","formControl","minWidth","selectEmpty","marginTop","textField","marginLeft","marginRight","getFilters","Promise","resolve","reject","html","get","data","error","Filters","setFilters","classes","listFilters","setListFilters","useState","getInitialData","responseFilters","filters","handleChange","event","itemId","console","log","target","value","map","item","values","name","id","e","validation","primitiveType","Date","format","shrink","min","max"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,aAAS;AACPC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADD;AAEPC,MAAAA,KAAK,EAAE;AAFA;AADL,GADiC;AAOvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,QAAQ,EAAE;AAJD,GAP4B;AAavCC,EAAAA,WAAW,EAAE;AACXR,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADG;AAEXQ,IAAAA,QAAQ,EAAE;AAFC,GAb0B;AAiBvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAEb,KAAK,CAACG,OAAN,CAAc,CAAd;AADA,GAjB0B;AAoBvCW,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAEf,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAETa,IAAAA,WAAW,EAAEhB,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ;AAGTC,IAAAA,KAAK,EAAE;AAHE;AApB4B,CAAZ,CAAD,CAA5B;;AA2BA,MAAMa,UAAU,GAAG,MAAM;AACvB,SAAO,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC5C,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAChB,iDADgB,CAAnB;AAGAH,MAAAA,OAAO,CAACE,IAAI,CAACE,IAAN,CAAP;AACD,KALD,CAKE,OAAOC,KAAP,EAAc;AACdJ,MAAAA,MAAM,CAACI,KAAD,CAAN;AACD;AACF,GATM,CAAP;AAUD,CAXD;;AAaA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAiC;AAAA;;AAC/B,QAAMC,OAAO,GAAG5B,SAAS,EAAzB;AACA,QAAM,CAAC6B,WAAD,EAAcC,cAAd,IAAgCxC,KAAK,CAACyC,QAAN,CAAe,IAAf,CAAtC;AACAxC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyC,cAAc,GAAG,YAAY;AACjC,YAAMC,eAAe,GAAG,MAAMf,UAAU,EAAxC;AACAY,MAAAA,cAAc,CAACG,eAAe,CAACC,OAAjB,CAAd;AACD,KAHD;;AAIAF,IAAAA,cAAc;AACf,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMG,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,MAAN,CAAaC,KAAb,CAAmBA,KAA/B,EAAsCJ,MAAtC,EADsC,CAGtC;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAET,OAAO,CAACtB,SAAxB;AAAA,cACGuB,WAAW,IACVA,WAAW,CAACa,GAAZ,CAAiBC,IAAD,iBACd;AAAA,iBACGA,IAAI,CAACC,MAAL,iBACC,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEhB,OAAO,CAACjB,WAAhC;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,EAAE,EAAC,0BAAf;AAAA,oBACGgC,IAAI,CAACE;AADR;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,0BADV;AAEE,UAAA,EAAE,EAAEF,IAAI,CAACG,EAFX,CAGE;AAHF;AAIE,UAAA,IAAI,EAAEH,IAAI,CAACE,IAJb;AAKE,UAAA,QAAQ,EAAGE,CAAD,IAAOZ,YAAY,CAACY,CAAD,EAAIJ,IAAI,CAACG,EAAT,CAL/B;AAAA,oBAOGH,IAAI,CAACC,MAAL,CAAYF,GAAZ,CAAiBC,IAAD,iBACf,QAAC,QAAD;AAAU,YAAA,KAAK,EAAEA,IAAI,CAACF,KAAtB;AAAA,sBAA8BE,IAAI,CAACE;AAAnC;AAAA;AAAA;AAAA;AAAA,kBADD;AAPH;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAmBGF,IAAI,CAACK,UAAL,IAAmBL,IAAI,CAACK,UAAL,CAAgBC,aAAhB,KAAkC,QAArD,iBACC;AAAM,QAAA,SAAS,EAAErB,OAAO,CAAC1B,IAAzB;AAA+B,QAAA,UAAU,MAAzC;AAA0C,QAAA,YAAY,EAAC,KAAvD;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,EAAE,EAAEyC,IAAI,CAACG,EADX;AAEE,UAAA,IAAI,EAAEH,IAAI,CAACE,IAFb;AAGE,UAAA,QAAQ,EAAGE,CAAD,IAAOZ,YAAY,CAACY,CAAD,EAAIJ,IAAI,CAACG,EAAT,CAH/B;AAIE,UAAA,KAAK,EAAEH,IAAI,CAACE,IAJd;AAKE,UAAA,IAAI,EAAC,gBALP;AAME,UAAA,YAAY,EAAE9C,MAAM,CAAC,IAAImD,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,qBAA1B,CANhB;AAOE,UAAA,SAAS,EAAEvB,OAAO,CAACb,SAPrB;AAQE,UAAA,eAAe,EAAE;AACfqC,YAAAA,MAAM,EAAE;AADO;AARnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApBJ,EAmCGT,IAAI,CAACK,UAAL,IAAmBL,IAAI,CAACK,UAAL,CAAgBC,aAAhB,KAAkC,SAArD,iBACC;AAAM,QAAA,SAAS,EAAErB,OAAO,CAAC1B,IAAzB;AAA+B,QAAA,UAAU,MAAzC;AAA0C,QAAA,YAAY,EAAC,KAAvD;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,EAAE,EAAEyC,IAAI,CAACG,EADX;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,IAAI,EAAEH,IAAI,CAACE,IAHb;AAIE,UAAA,KAAK,EAAEF,IAAI,CAACE,IAJd;AAKE,UAAA,QAAQ,EAAGE,CAAD,IAAOZ,YAAY,CAACY,CAAD,EAAIJ,IAAI,CAACG,EAAT,CAL/B;AAME,UAAA,UAAU,EAAE;AACVO,YAAAA,GAAG,EAAEV,IAAI,CAACK,UAAL,CAAgBK,GAAhB,IAAuB,CADlB;AAEVC,YAAAA,GAAG,EAAEX,IAAI,CAACK,UAAL,CAAgBM,GAAhB,IAAuB;AAFlB,WANd;AAUE,UAAA,eAAe,EAAE;AACfF,YAAAA,MAAM,EAAE;AADO;AAVnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApCJ;AAAA,oBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD;;GA9EQ1B,O;UACS1B,S;;;KADT0B,O;AAgFT,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nconst getFilters = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const html = await axios.get(\n        `http://www.mocky.io/v2/5a25fade2e0000213aa90776`,\n      );\n      resolve(html.data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nfunction Filters({ setFilters }) {\n  const classes = useStyles();\n  const [listFilters, setListFilters] = React.useState(null);\n  useEffect(() => {\n    const getInitialData = async () => {\n      const responseFilters = await getFilters();\n      setListFilters(responseFilters.filters);\n    };\n    getInitialData();\n  }, []);\n\n  const handleChange = (event, itemId) => {\n    console.log(event.target.value.value, itemId);\n\n    // setFilters(event.target.value);\n  };\n  \n  return (\n    <div className={classes.container}>\n      {listFilters &&\n        listFilters.map((item) => (\n          <>\n            {item.values && (\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">\n                  {item.name}\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id={item.id}\n                  // value={age}\n                  name={item.name}\n                  onChange={(e) => handleChange(e, item.id )}\n                >\n                  {item.values.map((item) => (\n                    <MenuItem value={item.value}>{item.name}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            )}\n            {item.validation && item.validation.primitiveType === 'STRING' && (\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField\n                  id={item.id}\n                  name={item.name}\n                  onChange={(e) => handleChange(e, item.id )}\n                  label={item.name}\n                  type=\"datetime-local\"\n                  defaultValue={moment(new Date()).format('yyyy-mm-dd HH:mm:ss')}\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n              </form>\n            )}\n            {item.validation && item.validation.primitiveType === 'INTEGER' && (\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField\n                  id={item.id}\n                  type=\"number\"\n                  name={item.name}\n                  label={item.name}\n                  onChange={(e) => handleChange(e, item.id )}\n                  inputProps={{\n                    min: item.validation.min || 1,\n                    max: item.validation.max || 50,\n                  }}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n              </form>\n            )}\n          </>\n        ))}\n    </div>\n  );\n}\n\nexport default Filters;\n"]},"metadata":{},"sourceType":"module"}