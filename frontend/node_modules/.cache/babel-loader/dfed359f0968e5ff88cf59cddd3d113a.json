{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/emerson/spotfy-playlist/src/components/filters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\n\nconst getFilters = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const html = await axios.get(`http://www.mocky.io/v2/5a25fade2e0000213aa90776`);\n      resolve(html.data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nfunction Filters({\n  selectedDate,\n  setSelectedDate\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [listFilters, setListFilters] = React.useState(null);\n  useEffect(() => {\n    const getInitialData = async () => {\n      const responseFilters = await getFilters();\n      setListFilters(responseFilters.filters);\n    };\n\n    getInitialData();\n  }, []);\n  const [filters, setFilters] = React.useState({\n    locale: '',\n    country: '',\n    timestamp: '',\n    limit: '',\n    offset: ''\n  });\n\n  const handleChange = event => {\n    console.log(event.target); // setFilters(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: listFilters && listFilters.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [item.values && /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\" // value={age}\n          ,\n          name: item.name,\n          onChange: handleChange,\n          children: item.values.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item.value,\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this), item.validation && item.validation.primitiveType === 'STRING' && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          name: item.name,\n          onChange: handleChange,\n          label: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"space-around\",\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            disableToolbar: true,\n            variant: \"inline\",\n            format: \"dd/MM/yyyy\",\n            margin: \"normal\",\n            id: \"date-picker-inline\",\n            label: \"Selecione uma data:\",\n            value: selectedDate,\n            onChange: handleChange,\n            KeyboardButtonProps: {\n              'aria-label': 'change date'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this), item.validation && item.validation.primitiveType === 'INTEGER' && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-number\",\n          type: \"number\",\n          name: item.name,\n          label: item.name,\n          onChange: handleChange,\n          inputProps: {\n            min: item.validation.min || 1,\n            max: item.validation.max || 50\n          },\n          InputLabelProps: {\n            shrink: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Filters, \"a5AOL1Rpn1bfKucp5vibSaRVaHM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Filters;\nexport default Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["/home/emerson/spotfy-playlist/src/components/filters.js"],"names":["React","useEffect","makeStyles","InputLabel","MenuItem","FormControl","Select","TextField","axios","Grid","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","useStyles","theme","container","display","justifyContent","alignItems","flexWrap","formControl","margin","spacing","minWidth","selectEmpty","marginTop","root","width","getFilters","Promise","resolve","reject","html","get","data","error","Filters","selectedDate","setSelectedDate","classes","listFilters","setListFilters","useState","getInitialData","responseFilters","filters","setFilters","locale","country","timestamp","limit","offset","handleChange","event","console","log","target","map","item","values","name","value","validation","primitiveType","min","max","shrink"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nconst getFilters = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const html = await axios.get(\n        `http://www.mocky.io/v2/5a25fade2e0000213aa90776`,\n      );\n      resolve(html.data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nfunction Filters({ selectedDate, setSelectedDate }) {\n  const classes = useStyles();\n  const [listFilters, setListFilters] = React.useState(null);\n  useEffect(() => {\n    const getInitialData = async () => {\n      const responseFilters = await getFilters();\n      setListFilters(responseFilters.filters);\n    };\n    getInitialData();\n  }, []);\n\n  const [filters, setFilters] = React.useState({\n    locale: '',\n    country: '',\n    timestamp: '',\n    limit: '',\n    offset: '',\n  });\n\n  const handleChange = (event) => {\n    console.log(event.target);\n    // setFilters(event.target.value);\n  };\n\n  return (\n    <div className={classes.container}>\n      {listFilters &&\n        listFilters.map((item) => (\n          <>\n            {item.values && (\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">\n                  {item.name}\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  // value={age}\n                  name={item.name}\n                  onChange={handleChange}\n                >\n                  {item.values.map((item) => (\n                    <MenuItem value={item.value}>{item.name}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            )}\n            {item.validation && item.validation.primitiveType === 'STRING' && (\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField\n                  id=\"standard-basic\"\n                  name={item.name}\n                  onChange={handleChange}\n                  label={item.name}\n                />\n                <Grid container justify=\"space-around\">\n                  <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"dd/MM/yyyy\"\n                    margin=\"normal\"\n                    id=\"date-picker-inline\"\n                    label=\"Selecione uma data:\"\n                    value={selectedDate}\n                    onChange={handleChange}\n                    KeyboardButtonProps={{\n                      'aria-label': 'change date',\n                    }}\n                  />\n                </Grid>\n              </form>\n            )}\n            {item.validation && item.validation.primitiveType === 'INTEGER' && (\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField\n                  id=\"filled-number\"\n                  type=\"number\"\n                  name={item.name}\n                  label={item.name}\n                  onChange={handleChange}\n                  inputProps={{\n                    min: item.validation.min || 1,\n                    max: item.validation.max || 50,\n                  }}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n              </form>\n            )}\n          </>\n        ))}\n    </div>\n  );\n}\n\nexport default Filters;\n"]},"metadata":{},"sourceType":"module"}