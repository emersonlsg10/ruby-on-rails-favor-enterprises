{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/emerson/spotfy-playlist/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport Filters from './components/filters';\nimport Playlist from './components/playlist';\nimport moment from 'moment';\nconst token = 'BQCBaWagplxGvAMEjeA33wLHG-bNtYQLvd2kv709wNrPlZHv450FHos2eWCMamwF9nXVwNC8rQVwvThuDspG7ORz-olHVR1w3AxNDvsu1xDH11jNcwKD6YTXTdRao9th71eEHCTAM7gMZVwNdsyeko-e2SvtX0G7eAmyoHj6BYbOn4BQfdOrAqIC7lbmpEFh-zUPWcHVSA';\n\nconst callSpotfy = params => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const html = await axios.get(`https://api.spotify.com/v1/browse/featured-playlists?${params}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      resolve(html.data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nfunction App() {\n  _s();\n\n  const [listMusic, setListMusic] = React.useState(null);\n  const [filters, setFilters] = React.useState({\n    locale: 'pt_BR',\n    country: 'BR',\n    timestamp: ``,\n    limit: '50',\n    offset: '1'\n  });\n\n  const getPlayList = async (params = '') => {\n    const responsePlaylist = await callSpotfy(params);\n    if (responsePlaylist && responsePlaylist.playlists) setListMusic(responsePlaylist.playlists);\n  };\n\n  const concatParams = () => {\n    let params = '';\n    const keys = Object.keys(filters);\n    const values = Object.values(filters);\n\n    for (let i = 0; i < keys.length; i++) {\n      params += `${keys[i]}=${values[i]}&`;\n    }\n\n    return params;\n  };\n\n  useEffect(() => {\n    getPlayList(concatParams());\n  }, [filters]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Filters, {\n      setFilters: setFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n      listMusic: listMusic || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vc9+6KFbTH/TnQr7FcWB0E+iefo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/emerson/spotfy-playlist/src/App.js"],"names":["React","useEffect","axios","Filters","Playlist","moment","token","callSpotfy","params","Promise","resolve","reject","html","get","headers","Authorization","data","error","App","listMusic","setListMusic","useState","filters","setFilters","locale","country","timestamp","limit","offset","getPlayList","responsePlaylist","playlists","concatParams","keys","Object","values","i","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,KAAK,GACT,4MADF;;AAGA,MAAMC,UAAU,GAAIC,MAAD,IAAY;AAC7B,SAAO,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC5C,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMV,KAAK,CAACW,GAAN,CAChB,wDAAuDL,MAAO,EAD9C,EAEjB;AACEM,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAAST,KAAM;AADxB;AADX,OAFiB,CAAnB;AAQAI,MAAAA,OAAO,CAACE,IAAI,CAACI,IAAN,CAAP;AACD,KAVD,CAUE,OAAOC,KAAP,EAAc;AACdN,MAAAA,MAAM,CAACM,KAAD,CAAN;AACD;AACF,GAdM,CAAP;AAeD,CAhBD;;AAkBA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BpB,KAAK,CAACqB,QAAN,CAAe,IAAf,CAAlC;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBvB,KAAK,CAACqB,QAAN,CAAe;AAC3CG,IAAAA,MAAM,EAAE,OADmC;AAE3CC,IAAAA,OAAO,EAAE,IAFkC;AAG3CC,IAAAA,SAAS,EAAG,EAH+B;AAI3CC,IAAAA,KAAK,EAAE,IAJoC;AAK3CC,IAAAA,MAAM,EAAE;AALmC,GAAf,CAA9B;;AAQA,QAAMC,WAAW,GAAG,OAAOrB,MAAM,GAAG,EAAhB,KAAuB;AACzC,UAAMsB,gBAAgB,GAAG,MAAMvB,UAAU,CAACC,MAAD,CAAzC;AACA,QAAIsB,gBAAgB,IAAIA,gBAAgB,CAACC,SAAzC,EACEX,YAAY,CAACU,gBAAgB,CAACC,SAAlB,CAAZ;AACH,GAJD;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIxB,MAAM,GAAG,EAAb;AACA,UAAMyB,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYX,OAAZ,CAAb;AACA,UAAMa,MAAM,GAAGD,MAAM,CAACC,MAAP,CAAcb,OAAd,CAAf;;AAEA,SAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC5B,MAAAA,MAAM,IAAK,GAAEyB,IAAI,CAACG,CAAD,CAAI,IAAGD,MAAM,CAACC,CAAD,CAAI,GAAlC;AACD;;AACD,WAAO5B,MAAP;AACD,GATD;;AAWAP,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,WAAW,CAACG,YAAY,EAAb,CAAX;AACD,GAFQ,EAEN,CAACV,OAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,UAAU,EAAEC;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEJ,SAAS,IAAI;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAtCQD,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport Filters from './components/filters';\nimport Playlist from './components/playlist';\nimport moment from 'moment';\n\nconst token =\n  'BQCBaWagplxGvAMEjeA33wLHG-bNtYQLvd2kv709wNrPlZHv450FHos2eWCMamwF9nXVwNC8rQVwvThuDspG7ORz-olHVR1w3AxNDvsu1xDH11jNcwKD6YTXTdRao9th71eEHCTAM7gMZVwNdsyeko-e2SvtX0G7eAmyoHj6BYbOn4BQfdOrAqIC7lbmpEFh-zUPWcHVSA';\n\nconst callSpotfy = (params) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const html = await axios.get(\n        `https://api.spotify.com/v1/browse/featured-playlists?${params}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        },\n      );\n      resolve(html.data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nfunction App() {\n  const [listMusic, setListMusic] = React.useState(null);\n\n  const [filters, setFilters] = React.useState({\n    locale: 'pt_BR',\n    country: 'BR',\n    timestamp: ``,\n    limit: '50',\n    offset: '1',\n  });\n\n  const getPlayList = async (params = '') => {\n    const responsePlaylist = await callSpotfy(params);\n    if (responsePlaylist && responsePlaylist.playlists)\n      setListMusic(responsePlaylist.playlists);\n  };\n\n  const concatParams = () => {\n    let params = '';\n    const keys = Object.keys(filters);\n    const values = Object.values(filters);\n\n    for (let i = 0; i < keys.length; i++) {\n      params += `${keys[i]}=${values[i]}&`;\n    }\n    return params;\n  };\n\n  useEffect(() => {\n    getPlayList(concatParams());\n  }, [filters]);\n\n  return (\n    <div className=\"App\">\n      <Filters setFilters={setFilters} />\n      <Playlist listMusic={listMusic || []} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}